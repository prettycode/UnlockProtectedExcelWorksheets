<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>unlock-protected-worksheets</title>
    <style>
      body {
        font-family: Arial, sans-serif;
        max-width: 800px;
        margin: 0 auto;
        padding: 20px;
      }
      button {
        margin: 10px 0;
        padding: 5px 10px;
      }
      #worksheetList {
        margin-top: 20px;
      }
    </style>
  </head>
  <body>
    <h1>Excel file:</h1>
    <input type="file" id="fileInput" accept=".xlsx" />
    <div id="worksheetList"></div>
    <button id="removeProtectionBtn" style="display: none">
      Remove Protection
    </button>
    <button id="clearBtn" style="display: none">Clear</button>

    <script>
      const fileInput = document.getElementById("fileInput");
      const worksheetList = document.getElementById("worksheetList");
      const removeProtectionBtn = document.getElementById(
        "removeProtectionBtn"
      );
      const clearBtn = document.getElementById("clearBtn");
      let fileBuffer;
      let fileName;

      fileInput.addEventListener("change", handleFileSelect);
      removeProtectionBtn.addEventListener("click", removeProtection);
      clearBtn.addEventListener("click", clearAll);

      function handleFileSelect(event) {
        const file = event.target.files[0];
        if (!file) return;

        fileName = file.name;
        const reader = new FileReader();
        reader.onload = function (e) {
          fileBuffer = e.target.result;
          displayWorksheets();
          removeProtectionBtn.style.display = "inline-block";
          clearBtn.style.display = "inline-block";
        };
        reader.readAsArrayBuffer(file);
      }

      function displayWorksheets() {
        // Dummy function to simulate worksheet protection check
        const worksheets = [
          { name: "Sheet1", protected: true },
          { name: "Sheet2", protected: false },
          { name: "Sheet3", protected: true },
        ];

        let html = "<h2>Worksheets:</h2><ul>";
        let hasProtectedSheet = false;
        worksheets.forEach((sheet) => {
          const emoji = sheet.protected ? "❌" : "✅";
          html += `<li>${sheet.name}: ${emoji}</li>`;
          if (sheet.protected) hasProtectedSheet = true;
        });
        html += "</ul>";

        worksheetList.innerHTML = html;

        if (hasProtectedSheet) {
          removeProtectionBtn.disabled = false;
          removeProtectionBtn.title = "";
        } else {
          removeProtectionBtn.disabled = true;
          removeProtectionBtn.title = "No protected worksheets found";
        }
      }

      function removeProtection() {
        const blob = new Blob([fileBuffer], {
          type: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
        });
        const url = URL.createObjectURL(blob);
        const a = document.createElement("a");
        a.href = url;
        a.download = fileName;
        document.body.appendChild(a);
        a.click();
        document.body.removeChild(a);
        URL.revokeObjectURL(url);
      }

      function clearAll() {
        fileInput.value = "";
        worksheetList.innerHTML = "";
        removeProtectionBtn.style.display = "none";
        clearBtn.style.display = "none";
        fileBuffer = null;
        fileName = null;
      }
    </script>
  </body>
</html>
